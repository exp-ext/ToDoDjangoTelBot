version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    volumes:
      - postgresql_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    restart: always
    image: redis:latest
    container_name: todo_redis
    expose:
      - 6379

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DJANGO_SECRET_KEY
    container_name: todo_django
    restart: always
    command: ./web_entrypoint.sh
    volumes:
      - static_volume:/app/web/static
      - /app/web/media:/app/web/media
    expose:
      - 8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/:/etc/nginx/conf.d
      - ./nginx/ssl/:/etc/ssl/
      - static_volume:/app/web/static
      - /app/web/media:/app/web/media  
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web

  celery:
    build:
      context: .
    container_name: todo_celery
    restart: always
    command: bash -c "cd todo && celery -A todo worker --loglevel=INFO"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - web
      - db

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile    
    container_name: todo_beat
    restart: always
    command: bash -c "cd todo && celery -A todo beat -l info --scheduler django_celery_beat.schedulers.DatabaseScheduler"
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - redis
      - celery
      - web
      - db

volumes:
  static_volume:
  postgresql_volume:
