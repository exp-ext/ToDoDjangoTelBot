version: '3.9'

services:

  db:
    image: postgres:13.10-alpine
    container_name: todo_db
    restart: unless-stopped
    volumes:
      - postgresql_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env

  redis:
    image: redis:latest
    container_name: todo_redis
    restart: always
    command: >
          --requirepass ${REDIS_PASSWORD}
    expose:
      - 6379
    env_file:
      - ./.env

  web:
    build:
      context: ../todo
      dockerfile: Dockerfile
      args:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    container_name: todo_django
    restart: always
    command: ./config/webtodo/entrypoint.sh
    volumes:
      - cache_pip_volume:/root/.cache/pip/:rw
      - cache_apt_volume:/var/cache/apt/archives/:rw
      - static_volume:/app/staticfiles/:rw
      - media_volume:/app/media/:rw
      - backup_volume:/app/backup/:rw
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis

  ws:
    build:
      context: ../todo
      dockerfile: Dockerfile
      args:
        DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    container_name: todo_ws_django
    restart: always
    command: >
      /bin/sh -c "daphne todo.asgi:application -b 0.0.0.0 -p 8080"
    volumes_from:
      - web:ro
    ports:
      - "8080:8080"
    env_file:
      - ./.env
    depends_on:
      - web
      - db
      - redis

  celery:
    build:
      context: ../todo
      dockerfile: Dockerfile
    container_name: todo_celery
    restart: always
    command: ./config/webtodo/celery-entrypoint.sh
    volumes_from:
      - web:ro
    env_file:
      - ./.env
    depends_on:
      - web
      - db
      - redis

  celery-beat:
    build:
      context: ../todo
      dockerfile: Dockerfile
    container_name: todo_beat
    restart: always
    command: ./config/webtodo/beat-entrypoint.sh
    volumes_from:
      - web:ro
    env_file:
      - ./.env
    depends_on:
      - web
      - db
      - redis
      - celery

volumes:
  postgresql_volume:
  cache_pip_volume:
  cache_apt_volume:
  backup_volume:
  media_volume:
    external: true
  static_volume:
    external: true
