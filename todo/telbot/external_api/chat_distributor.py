import asyncio

from telegram import Update
from telegram.ext import CallbackContext

from ..checking import check_registration
from .chat_gpt import GetAnswerGPT


def for_check(update: Update, context: CallbackContext):
    answers_for_check = {
        '?': (f'–Ø –º–æ–≥ –±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –í–∞–º, –µ—Å–ª–∏ [–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]({context.bot.link}) üßê'),
        '!': (f'–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–¥–µ—Ä–∂—É –í–∞—à—É –¥–∏—Å–∫—É—Å—Å–∏—é, –µ—Å–ª–∏ [–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]({context.bot.link}) üôÉ'),
        '': (f'–ö–∞–∫–∞—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –±–µ—Å–µ–¥–∞, [–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]({context.bot.link}) –∏ —è –ø–æ–¥–∫–ª—é—á—É—Å—å –∫ –Ω–µ–π üòá'),
    }
    allow_unregistered = True
    return check_registration(update, context, answers_for_check, allow_unregistered, return_user=True)


def get_answer_davinci_public(update: Update, context: CallbackContext):
    user = for_check(update, context)
    if user:
        get_answer = GetAnswerGPT(update, context, user)
        asyncio.run(get_answer.get_answer_chat_gpt())


def get_answer_davinci_person(update: Update, context: CallbackContext):
    user = for_check(update, context)
    if update.effective_chat.type == 'private' and user:
        get_answer = GetAnswerGPT(update, context, user)
        asyncio.run(get_answer.get_answer_chat_gpt())
