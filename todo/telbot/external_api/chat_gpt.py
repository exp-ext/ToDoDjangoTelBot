import os

import openai
from django.conf import settings
from django.contrib.auth import get_user_model
from dotenv import load_dotenv
from telegram import ParseMode, Update
from telegram.ext import CallbackContext

from ..cleaner import process_to_delete_message
from ..menus import assign_group

load_dotenv()

openai.api_key = os.getenv('CHAT_GP_TOKEN')

User = get_user_model()


def get_answer_davinci(update: Update, context: CallbackContext):
    chat = update.effective_chat
    user_tel = update.effective_user
    user = User.objects.filter(username=user_tel.id)
    text = None
    prompt = update.message.text.replace('#', '')
    answers = {
        '?': ('–Ø –º–æ–≥ –±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –í–∞–º, –µ—Å–ª–∏ '
              f'[–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]({context.bot.link}) üßê'),
        '!': ('–Ø –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–¥–µ—Ä–∂—É –í–∞—à—É –¥–∏—Å–∫—É—Å—Å–∏—é, –µ—Å–ª–∏ '
              f'[–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]({context.bot.link}) üôÉ'),
        '':  ('–ö–∞–∫–∞—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è –±–µ—Å–µ–¥–∞, [–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç–µ—Å—å]'
              f'({context.bot.link}) –∏ —è –ø–æ–¥–∫–ª—é—á—É—Å—å –∫ –Ω–µ–π üòá'),
    }
    if not user:
        for key, _ in answers.items():
            if key in prompt:
                text = answers[key]
                break
    elif not user[0].first_name:
        text = (
            '–Ø –º–æ–≥ –±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –Ω–æ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –∫ –í–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?\n'
            '–ï—Å—Ç—å 2 –≤–∞—Ä–∏–∞–Ω—Ç–∞ —Ä–µ—à–µ–Ω–∏—è.\n'
            '1 - –¥–æ–±–∞–≤–∏—Ç—å –∏–º—è –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ '
            f'[WEB –≤–µ—Ä—Å–∏–∏](https://{settings.DOMEN}/\n'
            '2 - –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –¢–µ–ª–µ–≥—Ä–∞–º–º–∞ –∏ –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é'
        )
    if text:
        message_id = context.bot.send_message(
            chat_id=chat.id,
            reply_to_message_id=update.message.message_id,
            text=text,
            parse_mode=ParseMode.MARKDOWN
        ).message_id
        *params, = chat.id, message_id, 20
        process_to_delete_message(params)
        return 'Bad user model'

    assign_group(update)

    model_engine = 'text-davinci-003'

    try:
        answer = openai.Completion.create(
            engine=model_engine,
            prompt=prompt,
            max_tokens=2048,
            temperature=0.3,
            top_p=0,
            frequency_penalty=0,
            presence_penalty=0,
        )

        context.bot.send_message(
            chat_id=chat.id,
            reply_to_message_id=update.message.message_id,
            text=answer.choices[0].text
        )
    except Exception as error:
        context.bot.send_message(225429268, error)
        raise KeyError(error)
    return 'Done'
