from core.views import get_password
from django.conf import settings
from django.contrib.auth import authenticate, get_user_model
from django.db.models.query import QuerySet
from django.http import HttpRequest, HttpResponseRedirect
from django.shortcuts import get_object_or_404, redirect
from telbot.cleaner import process_to_delete_message
from telbot.commands import set_up_commands
from telegram import Update
from telegram.ext import CallbackContext
from tzwhere import tzwhere

from todo.celery import app

from .models import Location

User = get_user_model()


def register(update: Update, context: CallbackContext) -> None:
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    chat = update.effective_chat
    user_id = chat.id
    first_name = update.message.from_user.first_name
    last_name = update.message.from_user.last_name
    if chat.type == 'private':
        domen = settings.DOMEN
        password = get_password(length=10)

        if User.objects.filter(username=user_id).exists():
            user = User.objects.get(username=user_id)
            user.first_name = first_name
            user.last_name = last_name
            user.set_password(password)
            user.save()
        else:
            user = User.objects.create_user(
                first_name=first_name,
                last_name=last_name,
                username=user_id,
                password=password
            )
            Location.objects.create(
                user=user,
                latitude=59.799,
                longitude=30.274
            )
        reply_text = (
            '–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ Your ToDo.\n'
            '–°—Å—ã–ª–∫–∞ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–ª—è –±—É–¥—É—â–∏—Ö –ø–æ—Å–µ—â–µ–Ω–∏–π:\n'
            f'{domen}/auth/login/\n'
            '–ª–æ–≥–∏–Ω:\n'
            f'{user_id}\n'
            '–ø–∞—Ä–æ–ª—å:\n'
            f'{password}\n'
            '–ê —Å–µ–π—á–∞—Å, –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ '
            f'[–í–•–û–îüïã]({domen}/auth/login/{user_id}/{password}/)'
            )
        update.message.reply_text(
                text=reply_text,
                parse_mode='Markdown'
            )
        set_up_commands(context.bot)
    else:
        message_id = context.bot.send_message(
            chat.id,
            f'{first_name}, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ "private"'
        ).message_id
        *params, = user_id, message_id, 20
        process_to_delete_message(params)


def login(request: HttpRequest, user_id: int = None,
          password: str = None) -> HttpResponseRedirect:
    """–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ –¢–µ–ª–µ–≥—Ä–∞–º–º."""
    user = authenticate(request, username=user_id, password=password)
    if not user:
        return redirect('users:login')
    login(request, user)
    return redirect('index')


def get_coordinates(username: int) -> QuerySet[Location]:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user = get_object_or_404(User, username=username)
    return user.locations.first()


@app.task(ignore_result=True)
def set_coordinates(update: Update, context: CallbackContext) -> None:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –∏ –∑–∞–ø–∏—Å—å –≤ –¥–∞–Ω–Ω—ã—Ö –≤ –ë–î."""
    chat = update.effective_chat
    user_id = chat.id
    latitude = update.message.location.latitude
    longitude = update.message.location.longitude
    user = get_object_or_404(User, username=user_id)

    user_tz = tzwhere.tzwhere()
    timezone_str = user_tz.tzNameAt(latitude, longitude)

    Location.objects.create(
        user=user,
        latitude=latitude,
        longitude=longitude,
        timezone=timezone_str
    )
